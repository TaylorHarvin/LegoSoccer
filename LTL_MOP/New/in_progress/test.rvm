import java.io.*;
import java.util.*;
import fullSoccer.*;
import stateTools.*;
test(Kicker MK) {

	StateCheck BC = new StateCheck();

	Kicker currMK;
	event statechange(ChangeEvent CE, Kicker MK){
		System.out.println("TEST EVENT");
		BC.PrintState(BC.GetState(ChangeEvent.SONAR, MK));
	}
	event wonderstate_true(Kicker MK, boolean wonderCheckRes){
		if ( ! (wonderCheckRes) ) {
			return false;
		}
		{
			System.out.println("Wonder Event TEST TRUE");
			BC.PrintState(State.WONDER);
		}
	}
	event wonderstate_false(Kicker MK, boolean wonderCheckRes){
		if ( ! (!wonderCheckRes) ) {
			return false;
		}
		{
			System.out.println("Wonder Event TEST FALSE");
		}
	}
	event gotoballstate_true(Kicker MK, boolean gtbCheckRes){
		if ( ! (gtbCheckRes) ) {
			return false;
		}
		{
			System.out.println("GTB Event TEST TRUE");
			BC.PrintState(State.GOTO_BALL);
		}
	}
	event gotoballstate_false(Kicker MK, boolean gtbCheckRes){
		if ( ! (!gtbCheckRes) ) {
			return false;
		}
		{
			System.out.println("GTB Event TEST FALSE");
		}
	}
	event dribbleballstate_true(Kicker MK, boolean dbCheckRes){
		if ( ! (dbCheckRes) ) {
			return false;
		}
		{
			System.out.println("DB Event TEST TRUE");
			BC.PrintState(State.DRIBBLE_TO_GOAL);
		}
	}
	event dribbleballstate_false(Kicker MK, boolean dbCheckRes){
		if ( ! (!dbCheckRes) ) {
			return false;
		}
		{
			System.out.println("DB Event TEST FALSE");
		}
	}
	event kickballatgoalstate_true(Kicker MK, boolean kbgCheckRes){
		if ( ! (kbgCheckRes) ) {
			return false;
		}
		{
			System.out.println("KBG Event TEST TRUE");
			BC.PrintState(State.KICK_BALL_TO_GOAL);
		}
	}
	event kickballatgoalstate_false(Kicker MK, boolean kbgCheckRes){
		if ( ! (!kbgCheckRes) ) {
			return false;
		}
		{
			System.out.println("KBG Event TEST FALSE");
		}
	}
	event ballinfront_true(Kicker MK, boolean ballinfrontRes){
		if ( ! (ballinfrontRes) ) {
			return false;
		}
		{
			currMK = MK;
			System.out.println("Ball in front TRUE: " + ballinfrontRes);
		}
	}
	event ballinfront_false(Kicker MK, boolean ballinfrontRes){
		if ( ! (!ballinfrontRes) ) {
			return false;
		}
		{
			currMK = MK;
			System.out.println("Ball in front FALSE: " + ballinfrontRes);
		}
	}
	ltl:  [](wonderstate_true => (wonderstate_true U ballinfront_true))

	@violation
	{
		__RESET;
	}
}
