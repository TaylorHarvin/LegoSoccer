// Base State LTL
// Events pulled from the StateCheck class in collaboration with RoboStateMachine.aj
// Also based directly off of the state diagram to ensure proper transitions
// -----------------------------------------------------------------------------------
// FROM: Goto ball state to turn to ball state
// 


//package mop;

import java.io.*;
import java.util.*;
import fullSoccer.*;
import stateTools.*;
import loggingTools.*;
import lejos.utility.Delay;

test(Kicker MK) { 
	Kicker currMK;	// Reference to kicker for the ltl violation
	
	
	//**************************GOTO BALL*************************************************************
	// Goto ball state check from StateCheck -- BEFORE
	event gotoballstate_enter before(Kicker MK):
		call(public boolean Kicker.gotoBall()) && this(MK){
			System.out.println("GTB Event ENTER");
			Logger.log(LogFile.TURN_GTB,"goto_ball_state_enter");
			StateCheck.GetState(ChangeEvent.IR_MOD, MK);
			//StateCheck.PrintState(State.GOTO_BALL);
		}
	// 
	event goto_ball_state_false after(Kicker MK) returning (boolean gtbCheckRes):
		call(public boolean StateCheck.GotoBallState(Kicker)) && condition(!gtbCheckRes) && args(MK){
			System.out.println("GTB Event TEST TRUE");
			Logger.log(LogFile.GTB_TURN,"goto_ball_state_false");
		}
	

	
	//**************************TURN TO BALL****************************************************************
	// Turn to ball state check from StateCheck -- when the state enters in turn to ball state

	event turnto_ball_state_enter before(Kicker MK):
		call(public boolean Kicker.turnToBall()) && this(MK){
			System.out.println("Wonder Event ENTER");
			StateCheck.PrintState(State.WONDER);
			StateCheck.GetState(ChangeEvent.IR_MOD, MK);
		}
	
	
	
	
	
	
	//************************************************************************************************	
	
	// Basic ball in front -- if false
	// NOTE: this is now tied to a secondary method called in RoboStateMachine.aj
	event ballinfront_false after(Kicker MK):
		call(public void Kicker.generateBallInFrontState()) && target(MK){
			currMK = MK;
			System.out.println("Ball in front TRUE");
			Logger.log(LogFile.GTB_TURN,"ballinfront_false");
		}
	
	ltl: gotoballstate_enter => o (goto_ball_state_true U ballinfront_false and o turnto_ball_state_enter)
	ltl: turnto_ball_state_enter => o (goto_ball_state_false U ballinfront_true and o gotoballstate_enter)
	
	@violation {
		System.out.println("!!!GTB TO TURN FAIL!!!");
		Logger.log(LogFile.GTB_TURN,"!!!GTB TO TURN FAIL!!!");
		__RESET;
	}
}

